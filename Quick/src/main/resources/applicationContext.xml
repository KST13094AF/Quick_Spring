<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
<bean id="tv" class="Tv.SamsungTv" init-method="init" destroy-method="destroy">
	<constructor-arg index="0" ref="apple"></constructor-arg>
	<constructor-arg index="1" value="20000"></constructor-arg>
</bean>

<!-- Setter 인젝션을 사용하려면 property 사용 -->
<bean id="tv2" class="Tv.SamsungTv" init-method="init" destroy-method="destroy">
	<property name="speaker" ref="sony"/>
	<property name="price" value="200000"/>
</bean>

<bean id="apple" class="Tv.AppleSpeaker"/>
<bean id="sony" class="Tv.SonySpeaker"/>

</beans>
<!-- Spring 설정 파일 new -> Other -> Spring.Spring Bean Configuration file 생성 -->

<!--
	즉시 로딩 방식: 컨테이너가 호출되면서 모든 객체 생성
	스프링 기반 테스르 하기 위해 스프링 설정 파일에 클래스를 등록해야함 
	클래스 당 빈 설정 하나 씩 
	
	<bean id="" class="" init-Method="" destroy-method="" lazy-init="" scope=""/>
	id: Bean 객체를 호출(Lookup) 할 때 사용한다 유일해야함
	class: 객체 생성할 class
	init-Method: 호출 시 디폴트 생성자를 호출하는데 맴버 변수 초기화 작업이 필요할 경우 init 메소드 지정.
	destroy-method: 스프링 컨테이너가 객체를 삭제하기 전에 호출될 메소드를 지정.
	lazy-init: 즉시 로딩 방식 동작이 아닌 bean이 사용하는 시점에서 객체를 생성하도록 속성을 제공하여 메모리 관리 효율적
	scope: 어느 범위에서 사용할 수 있는지 지정한다. default:singleton 스프링 컨테이너에 의해 객체 단 하나만 생성되어 운용한다. prototype: 요청 할 때 마다 새로운 객체 생성 값 
-->

<!-- 
	사용자 인젝션: 매개변수를 가지는 생성자 호출 의존관계에 있는 객체의 주소를 전달한다.
	사용자 인젝션 위해 bean에 등록한 객체를 생성자 인자로 전달한다.
	<constructor-arg ref="bean id"/>
-->
 
 <!-- 
 	Setter 인젝션 
	스프링 컨테이너가 자동으로 호출한다. 호출 시점은 bean 객체 생성 직후
	Setter 인젝션이 동작하려면 반드시 기본 생성자가 필요함!ㅈ
-->
 